name: Update Registry

on:
  repository_dispatch:
    types: [extension_version_update]
  workflow_dispatch:
    inputs:
      module:
        description: 'The module name to update (e.g., github.com/grafana/xk6-sql)'
        required: true
      version:
        description: 'The version to add (e.g., v1.0.6)'
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.K6_EXTENSION_REGISTRY_UPDATER_ID }}
          private-key: ${{ secrets.K6_EXTENSION_REGISTRY_UPDATER_PEM }}

      - name: Extract inputs
        id: inputs
        run: |
          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            echo "module=${{ github.event.client_payload.module }}" >> $GITHUB_OUTPUT
            echo "version=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
            echo "release_url=${{ github.event.client_payload.release_url }}" >> $GITHUB_OUTPUT
          else
            echo "module=${{ github.event.inputs.module }}" >> $GITHUB_OUTPUT
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            echo "release_url=" >> $GITHUB_OUTPUT
          fi

      - name: Install yq
        run: |
          echo "Installing yq v4..."
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq
          yq --version

      - name: Update registry with new version
        id: update-registry
        run: |
          ./update-registry.sh \
            --module "${{ steps.inputs.outputs.module }}" \
            --version "${{ steps.inputs.outputs.version }}"

      - name: Check for registry changes
        id: check-changes
        run: |
          # Check if there are any changes to the registry.yaml file
          if git diff --quiet registry.yaml; then
            echo "registry-changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in registry.yaml"
            git diff registry.yaml
          else
            echo "No changes detected in registry.yaml"
            echo "registry-changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check-changes.outputs.registry-changed == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.app-token.outputs.token }}
          title: 'Add ${{ steps.inputs.outputs.version }} to ${{ steps.inputs.outputs.module }}'
          body: |
            Automatically adds version to the k6 extension registry.
            
            **Module:** ${{ steps.inputs.outputs.module }}
            **Version:** ${{ steps.inputs.outputs.version }}
            ${{ steps.inputs.outputs.release_url && format('**Release:** {0}', steps.inputs.outputs.release_url) || '' }}

            This PR was created automatically via the registry update workflow.
          branch: add-version-${{ steps.inputs.outputs.module }}-${{ steps.inputs.outputs.version }}
          commit-message: 'Add ${{ steps.inputs.outputs.version }} for ${{ steps.inputs.outputs.module }}'
          labels: |
            automated
