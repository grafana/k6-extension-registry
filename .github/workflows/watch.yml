name: watch

env:
  BASE_URL: "https://registry.k6.io"

on:
  workflow_dispatch:
    inputs:
      force_changed:
        description: Force the "changed" output of k6registry
        type: boolean

  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - registry.yaml
      - .github/workflows/**
  schedule:
    - cron: "40 */2 * * *"

permissions:
  actions: write
  pages: write
  id-token: write

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      XDG_CACHE_HOME: ${{ github.workspace }}/build/cache
      HTDOCS_DIR: ${{ github.workspace }}/build/htdocs
      BUILD_DIR: ${{ github.workspace }}/build
    outputs:
      changed: ${{ steps.registry.outputs.changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Prepare
        run: |
          mkdir -p ${{ env.HTDOCS_DIR }}
          cp -rp public/* ${{ env.HTDOCS_DIR }}
          cp -p registry.schema.* ${{ env.HTDOCS_DIR }}
          cp -p openapi.yaml ${{ env.HTDOCS_DIR }}
          mkdir -p ${{ env.XDG_CACHE_HOME }}

      - name: Cache Restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: xdg-cache

      - name: registry.json
        id: registry
        uses: grafana/k6registry@v0.1.23
        with:
          in: "registry.yaml"
          api: "${{ env.HTDOCS_DIR }}"
          lint: "true"
          ref: "${{ env.BASE_URL }}/registry.json"
          verbose: "true"

      - name: Cache Clean
        if: ${{ ( github.ref_name == 'main' && steps.registry.outputs.changed == 'true' ) || inputs.force_changed }}
        run: |
          gh extension install actions/gh-actions-cache
          if gh cache list --key xdg-cache | grep -q  xdg_cache; then
            gh actions-cache delete xdg-cache --confirm
          fi

      - name: Cache Save
        uses: actions/cache/save@v4
        if: ${{ ( github.ref_name == 'main' && steps.registry.outputs.changed == 'true' ) || inputs.force_changed }}
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: xdg-cache

      - name: Upload
        uses: actions/upload-artifact@v4
        if: ${{ ( github.ref_name == 'main' && steps.registry.outputs.changed == 'true') || inputs.force_changed }}
        with:
          path: ${{ env.HTDOCS_DIR }}
          name: "htdocs"
          overwrite: true

  publish:
    runs-on: ubuntu-latest
    needs:
      - generate
    if: ${{ ( github.ref_name == 'main' && needs.generate.outputs.changed == 'true' ) || inputs.force_changed }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      HTDOCS_DIR: ${{ github.workspace }}/htdocs
    steps:
      - name: Prepare
        run: |
          mkdir -p ${{ env.HTDOCS_DIR }}

      - name: Download
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.HTDOCS_DIR }}
          name: "htdocs"

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.HTDOCS_DIR }}

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  notify:
    strategy:
      matrix:
        repo: ["k6-extension-list", "k6-docs"]
    runs-on: ubuntu-latest
    env:
      EVENT_TYPE: extension-registry-changed
    needs:
      - generate
      - publish
    if: ${{ ( github.ref_name == 'main' && needs.generate.outputs.changed == 'true' ) || inputs.force_changed }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.K6_EXTENSION_REGISTRY_CHANGE_NOTIFIER_ID }}
          private-key: ${{ secrets.K6_EXTENSION_REGISTRY_CHANGE_NOTIFIER_PEM }}
          owner: ${{ github.repository_owner }}
      - name: Dispatch event
        continue-on-error: true
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
          repository: ${{ github.repository_owner }}/${{ matrix.repo }}
          event-type: ${{ env.EVENT_TYPE }}
